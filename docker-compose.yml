#
# Copyright 2021 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

services:
  fulcio-server:
    build:
      context: .
      target: "deploy"
    command: [
      "fulcio-server",
      "serve",
      "--host=0.0.0.0",
      "--port=5555",
      "--grpc-port=5554",
      "--ca=ephemeralca",
      "--ct-log-url=https://ct_server:6962/test",
      "--ct-log.tls-ca-cert=/config/tls/ca.crt",
      # Uncomment this for production logging
      # "--log_type=prod",
      ]
    restart: always # keep the server running
    ports:
      - "5555:5555"
      - "5554:5554"
      - "${FULCIO_METRICS_PORT:-2112}:2112"
    volumes:
      - ~/.config/gcloud:/root/.config/gcloud/:z # for GCP authentication
      - ${FULCIO_CONFIG:-./config/identity/config.yaml}:/etc/fulcio-config/config.yaml:z
      - ./config/tls:/config/tls:z
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s
    depends_on:
      dex-idp:
        condition: service_healthy
    read_only: true
  dex-idp:
    build:
      context: .
      dockerfile: Dockerfile.dex-idp
    user: root
    command: [
      "dex",
      "serve",
      "/etc/config/docker-compose-config.yaml",
      ]
    restart: always # keep the server running
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:8888/auth/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
  ctfe_init:
    build:
      context: .
      dockerfile: Dockerfile.ctfe_init
    depends_on:
      trillian-log-server:
        condition: service_started
      fulcio-server:
        condition: service_healthy
    volumes:
      - ctfeConfig:/etc/config/:rw
  ct_server:
    image: ghcr.io/sigstore/scaffolding/ct_server:v0.7.22@sha256:30e9085cf0204dc326af2026127a86b955c3d599e37f2b972fe3182e42d572c4
    volumes:
      - ctfeConfig:/etc/config/:ro
      - ./config/tls:/config/tls:z
    command: [
        "--log_config" ,"/etc/config/ct_server.cfg",
        "--log_rpc_server", "trillian-log-server:8096",
        "--http_endpoint", "0.0.0.0:6962",
        "--tls_certificate", "/config/tls/tls.crt",
        "--tls_key", "/config/tls/tls.key",
        "--alsologtostderr",
    ]
    restart: always # retry while ctfe_init is running
    depends_on:
      trillian-log-server:
        condition: service_started
      trillian-log-signer:
        condition: service_started
      ctfe_init:
        condition: service_completed_successfully
    ports:
      - "6962:6962"
  mysql:
    platform: linux/amd64
    image: gcr.io/trillian-opensource-ci/db_server:v1.7.2@sha256:c3d5e243a2995e6bd83479c59cf5f586244f0988f97429f44e3334da0a95a5d0
    environment:
      - MYSQL_ROOT_PASSWORD=zaphod
      - MYSQL_DATABASE=test
      - MYSQL_USER=test
      - MYSQL_PASSWORD=zaphod
    restart: always # keep the MySQL server running
    healthcheck:
      test: ["CMD", "mysqladmin", "-h", "127.0.0.1", "-u$MYSQL_USER",  "-p$MYSQL_ROOT_PASSWORD", "-s", "ping"]
      interval: 10s
      timeout: 3s
      retries: 9
      start_period: 90s
    volumes:
      - mysql:/var/lib/mysql
  trillian-log-server:
    image: ghcr.io/sigstore/scaffolding/trillian_log_server:v1.7.1@sha256:8ae059cbde81aadc80aa07fb3a8e84f43a8d87e9f7e820c48dd33f6288b232fe
    command: [
      "--storage_system=mysql",
      "--mysql_uri=test:zaphod@tcp(mysql:3306)/test",
      "--rpc_endpoint=0.0.0.0:8096",
      "--http_endpoint=0.0.0.0:8095",
      "--alsologtostderr",
    ]
    restart: always # retry while mysql is starting up
    ports:
      - "8095:8090"
      - "8096:8091"
    depends_on:
      mysql:
        condition: service_healthy
  trillian-log-signer:
    image: ghcr.io/sigstore/scaffolding/trillian_log_signer:v1.7.1@sha256:46de4e7eec9944567f688dff946569f0725e48eeb4b07093a5f3aa11c130627f
    command: [
      "--storage_system=mysql",
      "--mysql_uri=test:zaphod@tcp(mysql:3306)/test",
      "--rpc_endpoint=0.0.0.0:8095",
      "--http_endpoint=0.0.0.0:8096",
      "--force_master",
      "--alsologtostderr",
    ]
    restart: always # retry while mysql is starting up
    ports:
      - "8097:8096"
    depends_on:
      mysql:
        condition: service_healthy
volumes:
  ctfeConfig: {}
  mysql: {}
